}
x1_sd
mean(x1_sd)
Xy_block = Xy
x1_sd = matrix()
for(i in 1:10)  {
s = sample(nrow(Xy_block),size=100,replace=FALSE)
Xy_s = Xy_block[s,]
b = boot(Xy_s, boot.fn, R=1000)
x1_sd[i] = sd(b$t[,2])
Xy_block = Xy_block[-s,]
}
mean(x1_sd)
Xy_block = Xy
x1_sd = matrix()
for(i in 1:10)  {
s = sample(nrow(Xy_block),size=100,replace=FALSE)
Xy_s = Xy_block[s,]
b = boot(Xy_s, boot.fn, R=1000)
x1_sd[i] = sd(b$t[,3])
Xy_block = Xy_block[-s,]
}
mean(x1_sd)
Xy_block = Xy
x1_sd = matrix()
for(i in 1:10)  {
s = sample(nrow(Xy_block),size=100,replace=FALSE)
Xy_s = Xy_block[s,]
b = boot(Xy_s, boot.fn, R=1000)
x1_sd[i] = sd(b$t[,2])
Xy_block = Xy_block[-s,]
}
se_b1 = sd(x1_sd) / sqrt(100)
se_b1
se_b1 = sd(x1_sd) / sqrt(10)
se_b1
?power
2^30
1+30*31/2
?cv.glmnet
?glmnet
load("/Users/Georgios/DEsktop/7.R.RData")
1-0.3^*0.36-0.64*0.64
1-0.36*0.36-0.64*0.64
log(0.36)
-(0.36*log(0.36)+0.64*log(0.64))
load(e1307)
load(e1071)
load("e1071")
load(e1071)
?load
library(e1071)
library("e1071)
""
)
"
library("e1071")
install.packages("e1071")
library(e1071)
set.see(10111)
set.see("10111")
set.seed("10111")
set.seed(10111)
x = matrix(rnorm(40),20,2)
dim(x)
plot(x)
x
trainMatrix = matrix(rnorm(1000), 100, 10)
trainMatrix[1:50,1:5] = trainMatrix[1:50,1:5] + 1
traindf <- data.frame(trainMatrix)
sfit = svm(y~.,data=traindf)
traindf$y = 0
for (i in 1:100) {
if(i <= 50) {
traindf[i,]$y = 0
} else {
traindf[i,]$y = 1
}
}
svmfit = svm(formula = y ~ ., data = traindf, kernel = 'radial')
a = 1
library(datasets)
data(iris)
?iris
clear
Sepal.Length
library(datasets)
data(iris)
head(iris)
mean(iris[iris[,4]="virginica",1])
mean(iris[iris[,4]=="virginica",1])
mean(iris[iris[,5]=="virginica",1])
mean(iris[iris[,5]=="virginica",1],na.rm = TRUE)
colMeans(iris)
colMeans(iris[,1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
head(mtars)
head(mtcars)
>tapply
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg[mtcars$cyl==4])
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[,c(1,3)]
a=tapply(mtcars$hp, mtcars$cyl, mean)
a
a[,1]-a[,3]
a[1,1]-a[1,3]
a[1]-a[3]
debug(ls)
ls
n
n
a
debug(ls)
ls
mean(iris[iris[,5]=="virginica",1],na.rm = TRUE)
apply(iris[, 1:4], 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
a[1]-a[3]
exit
exit
exit
bye
quit
quit
quit
quit
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0,10,by=0.5)
seq(0,10,length=30)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=0)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Georgios")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sun(my_na)
sum(my_na)
my_data
0 / 0
Inf - Inf
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, narf=NA)
vect <- c(foo = 11, bar = 2, narf = NA)
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector = 1:20
my_vector = c(1:20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector )
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patiends,my_matrix)
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
exit
exit()
quit()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="data.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="data.csv",method="curl")
data <- read.csv("data.csv")
summary(data)
head(data)
hhs <- read.csv("data.csv")
summary(hhs)
str(hhs)
summary(hhs$ACR)
hhs$GK <- hhs$ACR == 3 & hhs4AGS == 6
hhs$GK <- hhs$ACR == 3 & hhs$AGS == 6
summary(hh$GK)
summary(hhs$GK)
which(hhs$GK)
library(jpeg)
install.packahes("jpeg)")
install.packahes("jpeg")
install.packages("jpeg")
library(jpeg)
jp = radJpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jp = readJpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jp = readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
jp = readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",method="curl")
jp = readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile="image.jpg",method="curl")
jp = readJPEG("image.jpg")
jp = readJPEG("image.jpg",native=TRUE)
summary(jp)
head(jp)
plot(jp)
str(jp)
quantile(jp,probs=c(0.3,0.8))
file1 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
file2 = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
downloadfile(file1,method="curl",destfile="gdp.csv")
download.file(file1,method="curl",destfile="gdp.csv")
download.file(file2,method="curl",destfile="ed.csv")
gdp <- read.csv("gdp.csv")
ed <- read.csv("ed.csv")
head(gdp)
head(ed)
str(gdp)
str(ed)
tail(gdp)
head(gdp)
head(gdp$X)
str(ed)
str(ed$CountryCode)
head(gdp$X)
str(ed$CountryCode)
str(gdp$X)
gdped <- merge(gdp,ed,by.x = "gdp$X",by.y = "ed$CountryCode")
gdped <- merge(gdp,ed,by.x = "gdp$X",by.y = "ed$CountryCode",all=TRUE)
gdped <- merge(gdp,ed,by.x = "X",by.y = "CountryCode",all=TRUE)
gdped_s <- sort(gdped$Gross.domestic.product.2012)
gdped_s[13]
gdped_s[13,]
gdped_s
head(gdped_s)
sort(gdped$Gross.domestic.product.2012)
tail(gdped)
head(gdped)
dim(gdped)
gdped <- merge(gdp,ed,by.x = "X",by.y = "CountryCode",all=TRUE,na.rm=TRUE)
dim(gdped)
?merge
gdped <- merge(gdp,ed,by.x = "X",by.y = "CountryCode",all=FALSE)
dim(gdped)
sort(gdped$Gross.domestic.product.2012)
head(gdped)
tail(gdped)
sort(gdped$Gross.domestic.product.2012,decreasing=TRUE)
tail(gdped)
gdped$Gross.domestic.product.2012
?read.csv
gdp <- read.csv("gdp.csv",skip=5)
str(gdp)
head(gdp)
gdp <- read.csv("gdp.csv",skip=5,header=FALSE)
head(gdp)
gdped <- merge(gdp,ed,by.x = "V1",by.y = "CountryCode",all=FALSE)
dim(gdped)
sort(gdped$V2,decreasing=TRUE)
tail(gdped)
gdped$V2
?sort
sort.int(gdped$V2,decreasing=TRUE)
tail(gdped)
is.unsorted(gdped)
is.unsorted(gdped$V1)
is.unsorted(gdped$V2)
is.unsorted(gdped$V3)
str(gdped)
a <- sort.int(gdped$V2,decreasing=TRUE)
head(a)
tail(a)
sort(gdped$V2,decreasing=TRUE)
gdped$V2
order(gdped$V2,decreasing=TRUE)
tail(gdped)
gdped[order(gdped$V2,decreasing=TRUE)]
gdped[order(gdped$V2,decreasing=TRUE),]
tail(gdped)
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE),]
tail(gdped_s)
tail(gdped_s,n=10)
head(gdped_s,n=10)
head(gdped_s$V2,n=10)
head(gdped_s,n=10)
gdped$V2 <- as.numeric(as.character(gdped$V2))
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE),]
tail(gdped_s,n=10)
head(gdped_s,n=10)
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=NA),]
head(gdped_s,n=2)
tail(gdped_s,n=2)
gdped_s[12,]
gdped_s[12,1:5]
gdped_s[13,1:5]
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=TRUE),]
gdped_s[13,1:5]
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=FALSE),]
gdped_s[13,1:5]
gdped_s <- gdped[order(gdped$V2,decreasing=TRUE,na.last=NA),]
gdped_s[13,1:5]
gdped_s[1:13,1:5]
dim(gdped_s)
str(gdped)
?mean
mean(gdped$V2)
mean(gdped$V2,na.rm=TRUE)
mean(gdped$V2,na.rm=TRUE)
g1 <- gdped[gdped$Income.Group == "High Income: nonOECD",]
g1
g1 <- gdped[gdped$Income.Group == "High Income: OECD",]
g1
levels(gdped$Income.Group)
g1 <- gdped[gdped$Income.Group == "High income: OECD",]
g1
g2 <- gdped[gdped$Income.Group == "High income: nonOECD",]
mean(g1$V2,na.rm=TRUE)
mean(g2$V2,na.rm=TRUE)
?quantile
quantile(gdped$V2)
quantile(gdped$V2,na.rm=FALSE)
dim(gdped)
gdped
quantile(gdped_s$V2,na.rm=FALSE)
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
str(gdped_sq)
gdped_sq$quantile
head(gdped_sq)
gdped_sq$quantile
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2))))
gdped_sq$quantile
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
quantile(gdped_s$V2)
sum(gdped_sq$quantile == 1)
sum(gdped_sq$quantile == 2)
sum(gdped_sq$quantile == 3)
sum(gdped_sq$quantile == 4)
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2, probs=(0.2,0.4,0.6,0.8,1)), include.lowest=TRUE)))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2, probs=(0.2,0.4,0.6,0.8,1)), include.lowest=TRUE)))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2, probs=(0.2,0.4,0.6,0.8,1), include.lowest=TRUE)))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
qunatile(gdped_s)
quantile(gdped_s)
quantile(gdped_s$V2)
quantile(gdped_s$V2,probs=0.5)
quantile(gdped_s$V2,probs=c(0.2,0.4,0.6,0.8,1))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=c(0.2,0.4,0.6,0.8,1)), include.lowest=TRUE)))
gdped_sq$quantile
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=c(0.2,0.4,0.6,0.8,1)))))
gdped_sq$quantile
table(gdped_sq$Income.Group,gdped_sq$quantile)
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2))))
table(gdped_sq$Income.Group,gdped_sq$quantile)
4+22+9+12
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2), include.lowest=TRUE)))
table(gdped_sq$Income.Group,gdped_sq$quantile)
4+23+9+12
?cut
quantile(gdped_s$V2)
?quantile
quantile(gdped_s$V2,probs=seq(0.1,0.2))
quantile(gdped_s$V2,probs=seq(0,1,0.2))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=seq(0,1,0.2))))
))
gdped_sq <- within(gdped_s, quantile <- as.integer(cut(V2, quantile(V2,probs=seq(0,1,0.2)), include.lowest=TRUE)))
table(gdped_sq$Income.Group,gdped_sq$quantile)
4+18+5+11
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?pamel
?panel
?panel.axis
?panel.llines
?panel.text
?panel.points
?panel.llines
?panel.lines
?panel.axis
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.axis("GK")
xyplot(weight ~ Time | Diet, BodyWeight)
panel.axis("GK")
?panel.axis
?panel.lines
?panel.text
xyplot(weight ~ Time | Diet, BodyWeight)
panel.text("GK")
panel.text(1,1,"GK")
panel.text(10,10,"GK")
panel.text(100,100,"GK")
?panel.points
?panel.llines
?panel.text
?panel.axis
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?par
?splom
?print.trellis
?trellis.par.set
qtrellis.par.se
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
library(ggplot2)
library(qplot)
install.packages("ggplot2")
library(qplot)
library(ggplot2)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qqplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality$Month
levels(airquality$Month)
str(airquality)
factor(airquality$Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom
?qplot
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
setwd("~/Desktop/Project/GettingCleaningDataProject")
